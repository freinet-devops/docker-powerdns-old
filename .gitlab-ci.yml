image: freinet/ci-docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  GOSS_FILES_STRATEGY: cp
  CANDIDATE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CANDIDATE_BUILDER_IMAGE: $CI_REGISTRY_IMAGE/build:$CI_COMMIT_SHORT_SHA
  TEST_IMAGE: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_SHORT_SHA
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest

  DOCKER_HUB_IMAGE_NAME: freinet/powerdns
  DOCKER_HUB_TAGGED_IMAGE: $DOCKER_HUB_IMAGE_NAME:$CI_COMMIT_TAG
  DOCKER_HUB_RELEASE_IMAGE: $DOCKER_HUB_IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  DOCKER_HUB_LATEST_IMAGE: $DOCKER_HUB_IMAGE_NAME:latest


stages:
  - lint
  - build
  - test
  - release

docker_lint:
  stage: lint
  image: projectatomic/dockerfile-lint
  script:
    - dockerfile_lint -p -f Dockerfile

build_image:
  stage: build
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - export BASE_IMAGE=`grep FROM Dockerfile | cut -d' ' -f2`
    - docker pull $BASE_IMAGE; export BASEID=`docker image inspect --format='{{.Id}}' $BASE_IMAGE`
    - docker pull $LATEST_IMAGE && export LATEST_BASEID=`docker image inspect --format='{{.Config.Labels.baseid}}' $RELEASE_IMAGE`
  script:
    - >
      if [ "$BASEID" == "$LATEST_BASEID" ]; then
        docker build --pull --cache-from $RELEASE_IMAGE --label="baseid=$BASEID" -t $TEST_IMAGE .
      else
        docker build --label="baseid=$BASEID" -t $TEST_IMAGE .
      fi
    - docker push $TEST_IMAGE

test_image:
  stage: test
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker pull $TEST_IMAGE
  script:
    - dgoss run $TEST_IMAGE pdns_server

release_image:
  stage: release
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker tag $TEST_IMAGE $LATEST_IMAGE
    - docker tag $TEST_IMAGE $DOCKER_HUB_RELEASE_IMAGE
    - docker tag $TEST_IMAGE $DOCKER_HUB_LATEST_IMAGE
    - if [ ! -z $CI_COMMIT_TAG ] ; then docker tag $TEST_IMAGE $DOCKER_HUB_TAGGED_IMAGE && docker push $DOCKER_HUB_TAGGED_IMAGE; fi
    - docker push $RELEASE_IMAGE
    - docker push $LATEST_IMAGE
    - docker push $DOCKER_HUB_RELEASE_IMAGE
    - docker push $DOCKER_HUB_LATEST_IMAGE
  rules:
    - if: '$CI_COMMIT_TAG != null'

